{
  "hash": "4415264c4e4a044aac3b6589b193e449",
  "result": {
    "markdown": "---\ntitle: \"Modeling loans - Solutions\"\nsubtitle: \"eCOTS 2022 - Modernizing the undergraduate regression analysis course\"\neditor: visual\nexecute:\n  freeze: auto\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(knitr)\nlibrary(openintro)\n```\n:::\n\n\n# Introduction\n\nThe exercises below are drawn from an exam review.\nStudents would have already completed readings, some assignments, and labs prior to attempting these questions.\n\nYou may notice some code below has already been pre-populated for you.\nIn these cases, there is a flag set as `eval = FALSE`.\nMake sure to remove this flag prior to running the relevant code chunk to avoid any errors when rendering the document.\n\n## Data\n\nIn today's workshop, we will explore using the **tidymodels** framework for modeling along with the tidyverse framework for data wrangling and visualization.\nWe will start with some exploratory data analysis, walk through how to create the key components of a predictive model (models, recipes, and workflows), and how to perform cross-validation.\nThroughout we will be using the [`loans_full_schema`](http://openintrostat.github.io/openintro/reference/loans_full_schema.html) dataset from the **openintro** package[^1] and featured in the OpenIntro textbooks[^2]\n.\n\n[^1]: Mine Çetinkaya-Rundel, David Diez, Andrew Bray, Albert Y. Kim, Ben Baumer, Chester Ismay, Nick Paterno and Christopher Barr (2022).\n    openintro: Data Sets and Supplemental Functions from 'OpenIntro' Textbooks and Labs.\n    R package version 2.3.0.\n    <https://CRAN.R-project.org/package=openintro>.\n\n[^2]: Mine Çetinkaya-Rundel and Johanna Hardin.\n    2021.\n    OpenIntro::Introduction to Modern Statistics.\n    [https://openintro-ims.netlify.app](https://openintro-ims.netlify.app/).\n\nThe data has a bit of peculiarity about it, specifically the `application_type` variable is a factor variable with an empty level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(loans_full_schema$application_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"\"           \"individual\" \"joint\"     \n```\n:::\n:::\n\n\nLet's clean up this variable using the `droplevels()` function first.\nAnd let's apply that to the whole dataset, in case there are other variables with similar issues.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans_full_schema <- droplevels(loans_full_schema)\n```\n:::\n\n\nThe variables we'll use in this analysis are:\n\n-   `interest_rate`: Interest rate of the loan the applicant received.\n-   `debt_to_income`: Debt-to-income ratio.\n-   `term`: The number of months of the loan the applicant received.\n-   `inquiries_last_12m`: Inquiries into the applicant's credit during the last 12 months.\n-   `public_record_bankrupt`: Number of bankruptcies listed in the public record for this applicant.\n-   `application_type`: The type of application: either `individual` or `joint`.\n\n# Exercises\n\n## Exercise 1: Train-test data split\n\nSplit the data into a training and test set with a 75%-25% split.\nDon't forget to set a seed!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(210)\n\nloans_split <- initial_split(___)\n\nloans_train <- training(___)\nloans_test <- ___(___)\n```\n:::\n\n\n## Exercise 2: The Model\n\nWrite the model for predicting interest rate (`interest_rate`) from debt to income ratio (`debt_to_income`), the term of loan (`term`), the number of inquiries (credit checks) into the applicant's credit during the last 12 months (`inquiries_last_12m`), whether there are any bankruptcies listed in the public record for this applicant (`bankrupt`), and the type of application (`application_type`).\nThe model should allow for the effect of to income ratio on interest rate to vary by application type.\n\n\n$$\n\\begin{aligned}\n\\widehat{\\texttt{interest\\_rate}} = b_0 &+ b_1\\times\\texttt{debt\\_to\\_income} \\\\\n&+ b_2 \\times \\texttt{term} \\\\\n&+ b_3 \\times \\texttt{inquiries\\_last\\_12m} \\\\ \n&+ b_4 \\times \\texttt{bankrupt} \\\\\n&+ b_5 \\times \\texttt{application\\_type} \\\\\n&+ b_6 \\times \\texttt{debt\\_to\\_income:application\\_type}\n\\end{aligned}\n$$\n\n\n## Exercise 3: EDA\n\nExplore characteristics of the variables you'll use for the model using the training data only.\n\nFirst, take a peek at the relevant variables in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans_train %>%\n  select(interest_rate, debt_to_income, term,\n         inquiries_last_12m, public_record_bankrupt, application_type) %>%\n  glimpse()\n```\n:::\n\n\nCreate univariate, bivariate, and multivariate plots, and make sure to think about which plots are the most appropriate and effective given the data types.\n\n-   Interest rate:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans_train, aes(x = interest_rate)) +\n  geom_histogram(binwidth = 1) +\n  labs(\n    x = \"Interest rate\", y = \"Count\",\n    title = \"Distribution of loan interest rates\"\n  )\n```\n:::\n\n\n-   Interest rate vs. debt to income ratio by application type:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans_train, \n       aes(x = debt_to_income, y = interest_rate,\n           color = application_type, shape = application_type)) +\n  geom_point() +\n  labs(\n    x = \"Debt-to-income ratio\", y = \"Interest rate\",\n    color = \"Application type\", shape = \"Application type\",\n    title = \"Interest rate vs. Debt-to-income by application type\"\n  )\n```\n:::\n\n\n-   Interest rate by bankruptcy:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans_train %>%\n  mutate(bankrupt = if_else(public_record_bankrupt == 0, \"no\", \"yes\")) %>%\n  ggplot(aes(x = interest_rate, fill = bankrupt)) +\n  geom_density(alpha = 0.5) +\n  labs(\n    x = \"Interest rate\", y = \"Density\",\n    fill = \"Past bankrupcy status\", \n    title = \"Interest rate by past bankruptcy status\"\n  )\n```\n:::\n\n\n## Exercise 4: Model specification\n\nSpecify a linear regression model.\nCall it `loans_spec`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans_spec <- ___\n```\n:::\n\n\n## Exercise 5: Recipe and formula building\n\n-   Predict `interest_rate` from `debt_to_income`, `term`, `inquiries_last_12m`, `public_record_bankrupt`, and `application_type`.\n-   Mean center `debt_to_income`.\n-   Make `term` a factor.\n-   Create a new variable: `bankrupt` that takes on the value \"no\" if `public_record_bankrupt` is 0 and the value \"yes\" if `public_record_bankrupt` is 1 or higher. Then, remove `public_record_bankrupt`.\n-   Interact `application_type` with `debt_to_income`.\n-   Create dummy variables where needed and drop any zero variance variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans_rec <- recipe(interest_rate ~ ___, data = ___) %>%\n  step_center(___) %>%\n  step_mutate(term = ___) %>%\n  step_mutate(bankrupt = ___) %>%\n  step_rm(___) %>%\n  step_dummy(___) %>%\n  step_interact(terms = ~ ___) %>%\n  step_zv(___)\n```\n:::\n\n\n## Exercise 6: Creating a workflow\n\nCreate the workflow that brings together the model specification and recipe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans_wflow <- workflow() %>%\n  add_model(___) %>%\n  add_recipe(___)\n\nloans_wflow\n```\n:::\n\n\n## Exercise 7: Cross-validation and summary\n\nConduct 10-fold cross validation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(210)\nloans_folds <- vfold_cv(loans_train, v = 10)\n\nloans_fit_rs <- ___ %>%\n  fit_resamples(___)\n\nloans_fit_rs\n```\n:::\n\n\nSummarize metrics from your CV resamples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_metrics(___)\n```\n:::\n\n\nWe can also visualize the metrics across folds.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_metrics(loans_fit_rs, summarize = FALSE) %>%\n  ...\n```\n:::\n\n\n# Writing Exercise\n\nIn this exercise, we will synthesize our work above to create a reader-friendly version of our conclusions.\nIn the classroom, these sorts of writing exercises appear throughout homework and lab assignments as well as exams.\nThey give students an opportunity to demonstrate their understanding while gaining an appreciation that communication is a crucial part of using statistics.\n\n## Exploratory data analysis\n\nUsing your plots above (along with any other metrics you compute), describe your initial findings about the training data.\nDiscuss why we perform EDA only on the training data and not on the entire data set.\n\n## Model fitting and fit evaluation\n\nAlthough our primary aim is prediction and not inference, it may be of interest to view the model fit nonetheless to make sure nothing looks out of the ordinary.\nCreate a neatly organized table of the model output, and describe your observations, such as which parameters are significant.\nMake sure to interpret some coefficients appropriately.\n\n## Cross-validation\n\nExplain what 10-fold CV does, and why it's useful.\nDisplay a neat table with the outputs of your CV summary, and describe your observations.\nMake sure to discuss why we are focusing on R-squared and RMSE instead of adjusted R-squared, AIC, and BIC.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}